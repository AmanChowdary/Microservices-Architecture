name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build and test user-service
        run: |
          cd user-service
          npm install
          npm test || echo "No tests defined"
          docker build -t user-service:$IMAGE_TAG .

      - name: Build and test product-service
        run: |
          cd product-service
          npm install
          npm test || echo "No tests defined"
          docker build -t product-service:$IMAGE_TAG .

      - name: Build and test order-service
        run: |
          cd order-service
          npm install
          npm test || echo "No tests defined"
          docker build -t order-service:$IMAGE_TAG .

      # The following steps are commented out for local-only builds
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Push images to Docker Hub
      #   run: |
      #     docker push user-service:$IMAGE_TAG
      #     docker push product-service:$IMAGE_TAG
      #     docker push order-service:$IMAGE_TAG

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Deploy to Kubernetes with Helm
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          helm upgrade --install microservices-architecture ./helm --set userService.image=user-service:$IMAGE_TAG --set productService.image=product-service:$IMAGE_TAG --set orderService.image=order-service:$IMAGE_TAG
          